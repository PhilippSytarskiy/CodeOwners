- name: Get Code Owners Based on Rules
id: get_owners
run: |
  # Создаем пустой файл для владельцев кода
  > codeowners.txt

  echo "Processing changed files..."
  # Загружаем пути из JSON файла
  paths=$(jq -r 'keys[]' .github/approval_rules.json)

  # Пробегаем по каждому измененному файлу
  while IFS= read -r file; do
    echo "Checking owners for file: $file"
    
    owner_found=false
    clean_file="${file#/}"  # Убираем начальный '/'

    echo "Cleaned file path: $clean_file"

    for path in $paths; do
      clean_path="${path#/}"  # Убираем начальный '/' у пути из правил
      echo "Comparing with rule path: $clean_path"

      # Сопоставляем путь файла и путь из правил
      if [[ "$clean_file" == "$clean_path"* ]]; then
        echo "Match found for rule path '$clean_path'"
        owners=$(jq -r --arg path "$path" '.[$path][]' .github/approval_rules.json)
        echo "Owners for $file: $owners"
        echo "$owners" >> codeowners.txt
        owner_found=true
        break
      else
        echo "No match for file '$clean_file' and rule path '$clean_path'"
      fi
    done

    if [ "$owner_found" = false ]; then
      echo "No owners found for file: $file"
    fi
  done < changed_files.txt

  echo "Removing duplicates from code owners list..."
  sort -u codeowners.txt -o codeowners.txt
  echo "Unique code owners:"
  cat codeowners.txt

  REQUIRED_APPROVALS=$(wc -l < codeowners.txt)
  echo "Number of required approvals: $REQUIRED_APPROVALS"

  if [ "$REQUIRED_APPROVALS" -gt 0 ]; then
    echo "REQUIRED_APPROVALS=$REQUIRED_APPROVALS" >> $GITHUB_ENV
  else
    echo "No code owners found, skipping approvals check."
    exit 0
  fi
